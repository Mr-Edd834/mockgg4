// This is an example of how to integrate the auth routes into your main server.js file
// DO NOT replace your entire server.js - just add the relevant parts

const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
require('dotenv').config();

const app = express();

// Middleware
app.use(cors({
  origin: process.env.FRONTEND_URL || 'http://localhost:3000',
  credentials: true
}));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Database connection
mongoose.connect(process.env.MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => console.log('MongoDB connected successfully'))
.catch((err) => console.error('MongoDB connection error:', err));

// ======== ADD THIS PART TO YOUR EXISTING SERVER.JS ========
// Import auth routes
const authRoutes = require('./routes/authRoutes');

// Use auth routes
app.use('/auth', authRoutes);
// ======== END OF ADDITIONS ========

// Your existing Google OAuth routes should remain
// app.get('/auth/google', ...);
// app.get('/auth/google/callback', ...);

// Your other routes...

// Start server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});

